a:6:{s:9:"classesIn";a:1:{s:53:"SebastianBergmann\Comparator\MockObjectComparatorTest";a:6:{s:4:"name";s:24:"MockObjectComparatorTest";s:14:"namespacedName";s:53:"SebastianBergmann\Comparator\MockObjectComparatorTest";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:20;s:7:"endLine";i:166;s:7:"methods";a:10:{s:23:"acceptsSucceedsProvider";a:6:{s:10:"methodName";s:23:"acceptsSucceedsProvider";s:9:"signature";s:32:"acceptsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:28;s:7:"endLine";i:38;s:3:"ccn";i:1;}s:20:"acceptsFailsProvider";a:6:{s:10:"methodName";s:20:"acceptsFailsProvider";s:9:"signature";s:29:"acceptsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:40;s:7:"endLine";i:49;s:3:"ccn";i:1;}s:28:"assertEqualsSucceedsProvider";a:6:{s:10:"methodName";s:28:"assertEqualsSucceedsProvider";s:9:"signature";s:37:"assertEqualsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:51;s:7:"endLine";i:75;s:3:"ccn";i:1;}s:25:"assertEqualsFailsProvider";a:6:{s:10:"methodName";s:25:"assertEqualsFailsProvider";s:9:"signature";s:34:"assertEqualsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:77;s:7:"endLine";i:114;s:3:"ccn";i:1;}s:5:"setUp";a:6:{s:10:"methodName";s:5:"setUp";s:9:"signature";s:13:"setUp(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:116;s:7:"endLine";i:120;s:3:"ccn";i:1;}s:19:"testAcceptsSucceeds";a:6:{s:10:"methodName";s:19:"testAcceptsSucceeds";s:9:"signature";s:45:"testAcceptsSucceeds($expected, $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:122;s:7:"endLine";i:128;s:3:"ccn";i:1;}s:16:"testAcceptsFails";a:6:{s:10:"methodName";s:16:"testAcceptsFails";s:9:"signature";s:42:"testAcceptsFails($expected, $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:130;s:7:"endLine";i:136;s:3:"ccn";i:1;}s:24:"testAssertEqualsSucceeds";a:6:{s:10:"methodName";s:24:"testAssertEqualsSucceeds";s:9:"signature";s:58:"testAssertEqualsSucceeds($expected, $actual, $delta): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:138;s:7:"endLine";i:149;s:3:"ccn";i:2;}s:21:"testAssertEqualsFails";a:6:{s:10:"methodName";s:21:"testAssertEqualsFails";s:9:"signature";s:65:"testAssertEqualsFails($expected, $actual, $message, $delta): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:151;s:7:"endLine";i:158;s:3:"ccn";i:1;}s:27:"createMockForComparatorTest";a:6:{s:10:"methodName";s:27:"createMockForComparatorTest";s:9:"signature";s:111:"createMockForComparatorTest(string $type, array $constructorArguments): PHPUnit\Framework\MockObject\MockObject";s:10:"visibility";s:7:"private";s:9:"startLine";i:160;s:7:"endLine";i:165;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:167;s:18:"commentLinesOfCode";i:10;s:21:"nonCommentLinesOfCode";i:157;}s:15:"ignoredLinesFor";a:9:{i:0;i:20;i:1;i:21;i:2;i:22;i:3;i:23;i:4;i:24;i:5;i:122;i:6;i:130;i:7;i:138;i:8;i:151;}s:17:"executableLinesIn";a:87:{i:20;i:1;i:21;i:2;i:22;i:3;i:23;i:4;i:30;i:6;i:31;i:7;i:33;i:8;i:34;i:8;i:35;i:8;i:36;i:8;i:37;i:8;i:42;i:9;i:44;i:10;i:45;i:10;i:46;i:10;i:47;i:10;i:48;i:10;i:54;i:11;i:55;i:12;i:56;i:13;i:57;i:14;i:58;i:15;i:59;i:16;i:61;i:17;i:62;i:18;i:64;i:19;i:65;i:19;i:66;i:19;i:67;i:19;i:68;i:19;i:69;i:19;i:70;i:19;i:71;i:19;i:72;i:19;i:73;i:19;i:74;i:19;i:79;i:20;i:80;i:21;i:83;i:22;i:84;i:23;i:85;i:24;i:86;i:25;i:87;i:26;i:88;i:27;i:90;i:28;i:91;i:29;i:92;i:30;i:93;i:31;i:95;i:32;i:96;i:33;i:98;i:34;i:99;i:34;i:100;i:34;i:101;i:34;i:102;i:34;i:103;i:34;i:104;i:34;i:105;i:34;i:106;i:34;i:107;i:34;i:108;i:34;i:109;i:34;i:110;i:34;i:111;i:34;i:112;i:34;i:113;i:34;i:118;i:35;i:119;i:36;i:122;i:37;i:125;i:38;i:126;i:38;i:127;i:38;i:130;i:39;i:133;i:40;i:134;i:40;i:135;i:40;i:138;i:41;i:141;i:42;i:144;i:43;i:145;i:44;i:148;i:45;i:151;i:46;i:154;i:47;i:155;i:48;i:157;i:49;i:162;i:51;i:164;i:52;}}