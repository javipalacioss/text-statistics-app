a:6:{s:9:"classesIn";a:1:{s:48:"SebastianBergmann\Comparator\ArrayComparatorTest";a:6:{s:4:"name";s:19:"ArrayComparatorTest";s:14:"namespacedName";s:48:"SebastianBergmann\Comparator\ArrayComparatorTest";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:17;s:7:"endLine";i:160;s:7:"methods";a:8:{s:20:"acceptsFailsProvider";a:6:{s:10:"methodName";s:20:"acceptsFailsProvider";s:9:"signature";s:29:"acceptsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:25;s:7:"endLine";i:32;s:3:"ccn";i:1;}s:28:"assertEqualsSucceedsProvider";a:6:{s:10:"methodName";s:28:"assertEqualsSucceedsProvider";s:9:"signature";s:37:"assertEqualsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:34;s:7:"endLine";i:71;s:3:"ccn";i:1;}s:25:"assertEqualsFailsProvider";a:6:{s:10:"methodName";s:25:"assertEqualsFailsProvider";s:9:"signature";s:34:"assertEqualsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:73;s:7:"endLine";i:116;s:3:"ccn";i:1;}s:5:"setUp";a:6:{s:10:"methodName";s:5:"setUp";s:9:"signature";s:13:"setUp(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:118;s:7:"endLine";i:122;s:3:"ccn";i:1;}s:19:"testAcceptsSucceeds";a:6:{s:10:"methodName";s:19:"testAcceptsSucceeds";s:9:"signature";s:27:"testAcceptsSucceeds(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:124;s:7:"endLine";i:129;s:3:"ccn";i:1;}s:16:"testAcceptsFails";a:6:{s:10:"methodName";s:16:"testAcceptsFails";s:9:"signature";s:42:"testAcceptsFails($expected, $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:131;s:7:"endLine";i:137;s:3:"ccn";i:1;}s:24:"testAssertEqualsSucceeds";a:6:{s:10:"methodName";s:24:"testAssertEqualsSucceeds";s:9:"signature";s:73:"testAssertEqualsSucceeds($expected, $actual, $delta, $canonicalize): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:139;s:7:"endLine";i:150;s:3:"ccn";i:2;}s:21:"testAssertEqualsFails";a:6:{s:10:"methodName";s:21:"testAssertEqualsFails";s:9:"signature";s:70:"testAssertEqualsFails($expected, $actual, $delta, $canonicalize): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:152;s:7:"endLine";i:159;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:161;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:153;}s:15:"ignoredLinesFor";a:8:{i:0;i:17;i:1;i:18;i:2;i:19;i:3;i:20;i:4;i:21;i:5;i:131;i:6;i:139;i:7;i:152;}s:17:"executableLinesIn";a:103:{i:17;i:1;i:18;i:2;i:19;i:3;i:20;i:4;i:27;i:6;i:28;i:6;i:29;i:6;i:30;i:6;i:31;i:6;i:36;i:7;i:37;i:7;i:38;i:7;i:39;i:7;i:40;i:7;i:41;i:7;i:42;i:7;i:43;i:7;i:44;i:7;i:45;i:7;i:46;i:7;i:47;i:7;i:48;i:7;i:49;i:7;i:50;i:7;i:51;i:7;i:52;i:7;i:53;i:7;i:54;i:7;i:55;i:7;i:56;i:7;i:57;i:7;i:58;i:7;i:59;i:7;i:60;i:7;i:61;i:7;i:62;i:7;i:63;i:7;i:64;i:7;i:65;i:7;i:66;i:7;i:67;i:7;i:68;i:7;i:69;i:7;i:70;i:7;i:75;i:8;i:76;i:8;i:77;i:8;i:78;i:8;i:79;i:8;i:80;i:8;i:81;i:8;i:82;i:8;i:83;i:8;i:84;i:8;i:85;i:8;i:86;i:8;i:87;i:8;i:88;i:8;i:89;i:8;i:90;i:8;i:91;i:8;i:92;i:8;i:93;i:8;i:94;i:8;i:95;i:8;i:96;i:8;i:97;i:8;i:98;i:8;i:99;i:8;i:100;i:8;i:101;i:8;i:102;i:8;i:103;i:8;i:104;i:8;i:105;i:8;i:106;i:8;i:107;i:8;i:108;i:8;i:109;i:8;i:110;i:8;i:111;i:8;i:112;i:8;i:113;i:8;i:114;i:8;i:115;i:8;i:120;i:9;i:121;i:10;i:126;i:11;i:127;i:11;i:128;i:11;i:131;i:12;i:134;i:13;i:135;i:13;i:136;i:13;i:139;i:14;i:142;i:15;i:145;i:16;i:146;i:17;i:149;i:18;i:152;i:19;i:155;i:20;i:156;i:21;i:158;i:22;}}