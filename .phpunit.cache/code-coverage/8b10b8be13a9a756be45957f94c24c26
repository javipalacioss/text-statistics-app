a:6:{s:9:"classesIn";a:1:{s:44:"PHPUnit\Runner\Filter\NameFilterIteratorTest";a:6:{s:4:"name";s:22:"NameFilterIteratorTest";s:14:"namespacedName";s:44:"PHPUnit\Runner\Filter\NameFilterIteratorTest";s:9:"namespace";s:21:"PHPUnit\Runner\Filter";s:9:"startLine";i:18;s:7:"endLine";i:43;s:7:"methods";a:3:{s:22:"testCaseSensitiveMatch";a:6:{s:10:"methodName";s:22:"testCaseSensitiveMatch";s:9:"signature";s:30:"testCaseSensitiveMatch(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:22;s:7:"endLine";i:25;s:3:"ccn";i:1;}s:24:"testCaseInsensitiveMatch";a:6:{s:10:"methodName";s:24:"testCaseInsensitiveMatch";s:9:"signature";s:32:"testCaseInsensitiveMatch(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:27;s:7:"endLine";i:30;s:3:"ccn";i:1;}s:12:"createFilter";a:6:{s:10:"methodName";s:12:"createFilter";s:9:"signature";s:70:"createFilter(string $filter): PHPUnit\Runner\Filter\NameFilterIterator";s:10:"visibility";s:7:"private";s:9:"startLine";i:32;s:7:"endLine";i:42;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:44;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:36;}s:15:"ignoredLinesFor";a:3:{i:0;i:18;i:1;i:19;i:2;i:20;}s:17:"executableLinesIn";a:9:{i:18;i:1;i:19;i:2;i:24;i:3;i:29;i:4;i:34;i:5;i:35;i:6;i:37;i:7;i:39;i:8;i:41;i:9;}}