a:6:{s:9:"classesIn";a:1:{s:35:"SebastianBergmann\Type\NullTypeTest";a:6:{s:4:"name";s:12:"NullTypeTest";s:14:"namespacedName";s:35:"SebastianBergmann\Type\NullTypeTest";s:9:"namespace";s:22:"SebastianBergmann\Type";s:9:"startLine";i:17;s:7:"endLine";i:92;s:7:"methods";a:9:{s:15:"assignableTypes";a:6:{s:10:"methodName";s:15:"assignableTypes";s:9:"signature";s:24:"assignableTypes(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:24;s:7:"endLine";i:33;s:3:"ccn";i:1;}s:18:"notAssignableTypes";a:6:{s:10:"methodName";s:18:"notAssignableTypes";s:9:"signature";s:27:"notAssignableTypes(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:35;s:7:"endLine";i:40;s:3:"ccn";i:1;}s:5:"setUp";a:6:{s:10:"methodName";s:5:"setUp";s:9:"signature";s:13:"setUp(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:42;s:7:"endLine";i:45;s:3:"ccn";i:1;}s:16:"testIsAssignable";a:6:{s:10:"methodName";s:16:"testIsAssignable";s:9:"signature";s:67:"testIsAssignable(SebastianBergmann\Type\Type $assignableType): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:47;s:7:"endLine";i:51;s:3:"ccn";i:1;}s:19:"testIsNotAssignable";a:6:{s:10:"methodName";s:19:"testIsNotAssignable";s:9:"signature";s:68:"testIsNotAssignable(SebastianBergmann\Type\Type $assignedType): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:53;s:7:"endLine";i:57;s:3:"ccn";i:1;}s:14:"testAllowsNull";a:6:{s:10:"methodName";s:14:"testAllowsNull";s:9:"signature";s:22:"testAllowsNull(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:59;s:7:"endLine";i:62;s:3:"ccn";i:1;}s:11:"testHasName";a:6:{s:10:"methodName";s:11:"testHasName";s:9:"signature";s:19:"testHasName(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:64;s:7:"endLine";i:67;s:3:"ccn";i:1;}s:28:"testCanBeRepresentedAsString";a:6:{s:10:"methodName";s:28:"testCanBeRepresentedAsString";s:9:"signature";s:36:"testCanBeRepresentedAsString(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:69;s:7:"endLine";i:72;s:3:"ccn";i:1;}s:23:"testCanBeQueriedForType";a:6:{s:10:"methodName";s:23:"testCanBeQueriedForType";s:9:"signature";s:31:"testCanBeQueriedForType(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:74;s:7:"endLine";i:91;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:93;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:85;}s:15:"ignoredLinesFor";a:6:{i:0;i:17;i:1;i:18;i:2;i:19;i:3;i:20;i:4;i:47;i:5;i:53;}s:17:"executableLinesIn";a:36:{i:17;i:1;i:18;i:2;i:19;i:3;i:26;i:5;i:27;i:5;i:28;i:5;i:29;i:5;i:30;i:5;i:31;i:5;i:32;i:5;i:37;i:6;i:38;i:6;i:39;i:6;i:44;i:7;i:47;i:8;i:50;i:9;i:53;i:10;i:56;i:11;i:61;i:12;i:66;i:13;i:71;i:14;i:76;i:15;i:77;i:16;i:78;i:17;i:79;i:18;i:80;i:19;i:81;i:20;i:82;i:21;i:83;i:22;i:84;i:23;i:85;i:24;i:86;i:25;i:87;i:26;i:88;i:27;i:89;i:28;i:90;i:29;}}