a:6:{s:9:"classesIn";a:1:{s:52:"SebastianBergmann\Comparator\ExceptionComparatorTest";a:6:{s:4:"name";s:23:"ExceptionComparatorTest";s:14:"namespacedName";s:52:"SebastianBergmann\Comparator\ExceptionComparatorTest";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:19;s:7:"endLine";i:125;s:7:"methods";a:9:{s:23:"acceptsSucceedsProvider";a:6:{s:10:"methodName";s:23:"acceptsSucceedsProvider";s:9:"signature";s:32:"acceptsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:27;s:7:"endLine";i:34;s:3:"ccn";i:1;}s:20:"acceptsFailsProvider";a:6:{s:10:"methodName";s:20:"acceptsFailsProvider";s:9:"signature";s:29:"acceptsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:36;s:7:"endLine";i:43;s:3:"ccn";i:1;}s:28:"assertEqualsSucceedsProvider";a:6:{s:10:"methodName";s:28:"assertEqualsSucceedsProvider";s:9:"signature";s:37:"assertEqualsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:45;s:7:"endLine";i:59;s:3:"ccn";i:1;}s:25:"assertEqualsFailsProvider";a:6:{s:10:"methodName";s:25:"assertEqualsFailsProvider";s:9:"signature";s:34:"assertEqualsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:61;s:7:"endLine";i:80;s:3:"ccn";i:1;}s:5:"setUp";a:6:{s:10:"methodName";s:5:"setUp";s:9:"signature";s:13:"setUp(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:82;s:7:"endLine";i:86;s:3:"ccn";i:1;}s:19:"testAcceptsSucceeds";a:6:{s:10:"methodName";s:19:"testAcceptsSucceeds";s:9:"signature";s:45:"testAcceptsSucceeds($expected, $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:88;s:7:"endLine";i:94;s:3:"ccn";i:1;}s:16:"testAcceptsFails";a:6:{s:10:"methodName";s:16:"testAcceptsFails";s:9:"signature";s:42:"testAcceptsFails($expected, $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:96;s:7:"endLine";i:102;s:3:"ccn";i:1;}s:24:"testAssertEqualsSucceeds";a:6:{s:10:"methodName";s:24:"testAssertEqualsSucceeds";s:9:"signature";s:50:"testAssertEqualsSucceeds($expected, $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:104;s:7:"endLine";i:115;s:3:"ccn";i:2;}s:21:"testAssertEqualsFails";a:6:{s:10:"methodName";s:21:"testAssertEqualsFails";s:9:"signature";s:57:"testAssertEqualsFails($expected, $actual, $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:117;s:7:"endLine";i:124;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:126;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:118;}s:15:"ignoredLinesFor";a:9:{i:0;i:19;i:1;i:20;i:2;i:21;i:3;i:22;i:4;i:23;i:5;i:88;i:6;i:96;i:7;i:104;i:8;i:117;}s:17:"executableLinesIn";a:57:{i:19;i:1;i:20;i:2;i:21;i:3;i:22;i:4;i:29;i:6;i:30;i:6;i:31;i:6;i:32;i:6;i:33;i:6;i:38;i:7;i:39;i:7;i:40;i:7;i:41;i:7;i:42;i:7;i:47;i:8;i:48;i:9;i:50;i:10;i:51;i:11;i:53;i:12;i:54;i:12;i:55;i:12;i:56;i:12;i:57;i:12;i:58;i:12;i:63;i:13;i:64;i:14;i:66;i:15;i:67;i:16;i:68;i:17;i:70;i:18;i:71;i:19;i:73;i:20;i:74;i:20;i:75;i:20;i:76;i:20;i:77;i:20;i:78;i:20;i:79;i:20;i:84;i:21;i:85;i:22;i:88;i:23;i:91;i:24;i:92;i:24;i:93;i:24;i:96;i:25;i:99;i:26;i:100;i:26;i:101;i:26;i:104;i:27;i:107;i:28;i:110;i:29;i:111;i:30;i:114;i:31;i:117;i:32;i:120;i:33;i:121;i:34;i:123;i:35;}}