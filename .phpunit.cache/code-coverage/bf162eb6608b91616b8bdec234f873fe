a:6:{s:9:"classesIn";a:1:{s:44:"PHPUnit\Framework\Constraint\JsonMatchesTest";a:6:{s:4:"name";s:15:"JsonMatchesTest";s:14:"namespacedName";s:44:"PHPUnit\Framework\Constraint\JsonMatchesTest";s:9:"namespace";s:28:"PHPUnit\Framework\Constraint";s:9:"startLine";i:21;s:7:"endLine";i:185;s:7:"methods";a:9:{s:20:"evaluateDataprovider";a:6:{s:10:"methodName";s:20:"evaluateDataprovider";s:9:"signature";s:29:"evaluateDataprovider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:25;s:7:"endLine";i:44;s:3:"ccn";i:1;}s:82:"evaluateThrowsExpectationFailedExceptionWhenJsonIsValidButDoesNotMatchDataprovider";a:6:{s:10:"methodName";s:82:"evaluateThrowsExpectationFailedExceptionWhenJsonIsValidButDoesNotMatchDataprovider";s:9:"signature";s:91:"evaluateThrowsExpectationFailedExceptionWhenJsonIsValidButDoesNotMatchDataprovider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:46;s:7:"endLine";i:56;s:3:"ccn";i:1;}s:12:"testEvaluate";a:6:{s:10:"methodName";s:12:"testEvaluate";s:9:"signature";s:72:"testEvaluate(bool $expected, string $jsonOther, string $jsonValue): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:58;s:7:"endLine";i:64;s:3:"ccn";i:1;}s:74:"testEvaluateThrowsExpectationFailedExceptionWhenJsonIsValidButDoesNotMatch";a:6:{s:10:"methodName";s:74:"testEvaluateThrowsExpectationFailedExceptionWhenJsonIsValidButDoesNotMatch";s:9:"signature";s:118:"testEvaluateThrowsExpectationFailedExceptionWhenJsonIsValidButDoesNotMatch(string $jsonOther, string $jsonValue): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:66;s:7:"endLine";i:85;s:3:"ccn";i:2;}s:12:"testToString";a:6:{s:10:"methodName";s:12:"testToString";s:9:"signature";s:20:"testToString(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:87;s:7:"endLine";i:93;s:3:"ccn";i:1;}s:37:"testFailErrorWithInvalidValueAndOther";a:6:{s:10:"methodName";s:37:"testFailErrorWithInvalidValueAndOther";s:9:"signature";s:45:"testFailErrorWithInvalidValueAndOther(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:95;s:7:"endLine";i:112;s:3:"ccn";i:2;}s:42:"testFailErrorWithValidValueAndInvalidOther";a:6:{s:10:"methodName";s:42:"testFailErrorWithValidValueAndInvalidOther";s:9:"signature";s:50:"testFailErrorWithValidValueAndInvalidOther(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:114;s:7:"endLine";i:131;s:3:"ccn";i:2;}s:40:"testEmptyObjectNotConvertedToArrayInDiff";a:6:{s:10:"methodName";s:40:"testEmptyObjectNotConvertedToArrayInDiff";s:9:"signature";s:48:"testEmptyObjectNotConvertedToArrayInDiff(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:133;s:7:"endLine";i:157;s:3:"ccn";i:2;}s:32:"testObjectAreCanonicalizedInDiff";a:6:{s:10:"methodName";s:32:"testObjectAreCanonicalizedInDiff";s:9:"signature";s:40:"testObjectAreCanonicalizedInDiff(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:159;s:7:"endLine";i:184;s:3:"ccn";i:2;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:186;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:178;}s:15:"ignoredLinesFor";a:5:{i:0;i:21;i:1;i:22;i:2;i:23;i:3;i:58;i:4;i:66;}s:17:"executableLinesIn";a:83:{i:21;i:1;i:22;i:2;i:27;i:3;i:28;i:3;i:29;i:3;i:30;i:3;i:31;i:3;i:32;i:3;i:33;i:3;i:34;i:3;i:35;i:3;i:36;i:3;i:37;i:3;i:38;i:3;i:39;i:3;i:40;i:3;i:41;i:3;i:42;i:3;i:43;i:3;i:48;i:4;i:49;i:4;i:50;i:4;i:51;i:4;i:52;i:4;i:53;i:4;i:54;i:4;i:55;i:4;i:58;i:5;i:61;i:6;i:63;i:7;i:66;i:8;i:69;i:9;i:72;i:10;i:73;i:11;i:74;i:12;i:75;i:13;i:76;i:14;i:78;i:15;i:79;i:16;i:81;i:17;i:82;i:18;i:83;i:19;i:89;i:20;i:90;i:21;i:92;i:22;i:97;i:23;i:100;i:24;i:101;i:25;i:102;i:26;i:103;i:27;i:104;i:27;i:107;i:27;i:108;i:27;i:109;i:27;i:110;i:27;i:116;i:28;i:119;i:29;i:120;i:30;i:121;i:31;i:122;i:32;i:123;i:32;i:126;i:32;i:127;i:32;i:128;i:32;i:129;i:32;i:135;i:33;i:138;i:34;i:139;i:35;i:140;i:36;i:141;i:36;i:152;i:36;i:153;i:36;i:154;i:36;i:155;i:36;i:161;i:37;i:164;i:38;i:165;i:39;i:166;i:40;i:167;i:40;i:179;i:40;i:180;i:40;i:181;i:40;i:182;i:40;}}