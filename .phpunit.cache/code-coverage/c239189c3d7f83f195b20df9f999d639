a:6:{s:9:"classesIn";a:1:{s:39:"SebastianBergmann\Type\CallableTypeTest";a:6:{s:4:"name";s:16:"CallableTypeTest";s:14:"namespacedName";s:39:"SebastianBergmann\Type\CallableTypeTest";s:9:"namespace";s:22:"SebastianBergmann\Type";s:9:"startLine";i:20;s:7:"endLine";i:165;s:7:"methods";a:15:{s:5:"setUp";a:6:{s:10:"methodName";s:5:"setUp";s:9:"signature";s:13:"setUp(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:30;s:7:"endLine";i:33;s:3:"ccn";i:1;}s:11:"testHasName";a:6:{s:10:"methodName";s:11:"testHasName";s:9:"signature";s:19:"testHasName(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:35;s:7:"endLine";i:38;s:3:"ccn";i:1;}s:19:"testMayDisallowNull";a:6:{s:10:"methodName";s:19:"testMayDisallowNull";s:9:"signature";s:27:"testMayDisallowNull(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:40;s:7:"endLine";i:43;s:3:"ccn";i:1;}s:16:"testMayAllowNull";a:6:{s:10:"methodName";s:16:"testMayAllowNull";s:9:"signature";s:24:"testMayAllowNull(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:45;s:7:"endLine";i:50;s:3:"ccn";i:1;}s:39:"testNullCanBeAssignedToNullableCallable";a:6:{s:10:"methodName";s:39:"testNullCanBeAssignedToNullableCallable";s:9:"signature";s:47:"testNullCanBeAssignedToNullableCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:52;s:7:"endLine";i:57;s:3:"ccn";i:1;}s:35:"testCallableCanBeAssignedToCallable";a:6:{s:10:"methodName";s:35:"testCallableCanBeAssignedToCallable";s:9:"signature";s:43:"testCallableCanBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:59;s:7:"endLine";i:62;s:3:"ccn";i:1;}s:34:"testClosureCanBeAssignedToCallable";a:6:{s:10:"methodName";s:34:"testClosureCanBeAssignedToCallable";s:9:"signature";s:42:"testClosureCanBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:64;s:7:"endLine";i:74;s:3:"ccn";i:1;}s:36:"testInvokableCanBeAssignedToCallable";a:6:{s:10:"methodName";s:36:"testInvokableCanBeAssignedToCallable";s:9:"signature";s:44:"testInvokableCanBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:76;s:7:"endLine";i:86;s:3:"ccn";i:1;}s:49:"testStringWithFunctionNameCanBeAssignedToCallable";a:6:{s:10:"methodName";s:49:"testStringWithFunctionNameCanBeAssignedToCallable";s:9:"signature";s:57:"testStringWithFunctionNameCanBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:88;s:7:"endLine";i:95;s:3:"ccn";i:1;}s:65:"testStringWithClassNameAndStaticMethodNameCanBeAssignedToCallable";a:6:{s:10:"methodName";s:65:"testStringWithClassNameAndStaticMethodNameCanBeAssignedToCallable";s:9:"signature";s:73:"testStringWithClassNameAndStaticMethodNameCanBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:97;s:7:"endLine";i:104;s:3:"ccn";i:1;}s:64:"testArrayWithClassNameAndStaticMethodNameCanBeAssignedToCallable";a:6:{s:10:"methodName";s:64:"testArrayWithClassNameAndStaticMethodNameCanBeAssignedToCallable";s:9:"signature";s:72:"testArrayWithClassNameAndStaticMethodNameCanBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:106;s:7:"endLine";i:113;s:3:"ccn";i:1;}s:66:"testArrayWithClassNameAndInstanceMethodNameCanBeAssignedToCallable";a:6:{s:10:"methodName";s:66:"testArrayWithClassNameAndInstanceMethodNameCanBeAssignedToCallable";s:9:"signature";s:74:"testArrayWithClassNameAndInstanceMethodNameCanBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:115;s:7:"endLine";i:122;s:3:"ccn";i:1;}s:56:"testSomethingThatIsNotCallableCannotBeAssignedToCallable";a:6:{s:10:"methodName";s:56:"testSomethingThatIsNotCallableCannotBeAssignedToCallable";s:9:"signature";s:64:"testSomethingThatIsNotCallableCannotBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:124;s:7:"endLine";i:131;s:3:"ccn";i:1;}s:55:"testObjectWithoutInvokeMethodCannotBeAssignedToCallable";a:6:{s:10:"methodName";s:55:"testObjectWithoutInvokeMethodCannotBeAssignedToCallable";s:9:"signature";s:63:"testObjectWithoutInvokeMethodCannotBeAssignedToCallable(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:133;s:7:"endLine";i:145;s:3:"ccn";i:1;}s:23:"testCanBeQueriedForType";a:6:{s:10:"methodName";s:23:"testCanBeQueriedForType";s:9:"signature";s:31:"testCanBeQueriedForType(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:147;s:7:"endLine";i:164;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:166;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:158;}s:15:"ignoredLinesFor";a:7:{i:0;i:20;i:1;i:21;i:2;i:22;i:3;i:23;i:4;i:24;i:5;i:25;i:6;i:26;}s:17:"executableLinesIn";a:80:{i:20;i:1;i:21;i:2;i:22;i:3;i:23;i:4;i:24;i:5;i:25;i:6;i:32;i:8;i:37;i:9;i:42;i:10;i:47;i:11;i:49;i:12;i:54;i:13;i:56;i:14;i:61;i:15;i:66;i:16;i:67;i:16;i:68;i:16;i:69;i:16;i:70;i:16;i:71;i:16;i:72;i:16;i:73;i:16;i:78;i:17;i:79;i:17;i:80;i:17;i:81;i:17;i:82;i:17;i:83;i:17;i:84;i:17;i:85;i:17;i:90;i:18;i:91;i:18;i:92;i:18;i:93;i:18;i:94;i:18;i:99;i:19;i:100;i:19;i:101;i:19;i:102;i:19;i:103;i:19;i:108;i:20;i:109;i:20;i:110;i:20;i:111;i:20;i:112;i:20;i:117;i:21;i:118;i:21;i:119;i:21;i:120;i:21;i:121;i:21;i:126;i:22;i:127;i:22;i:128;i:22;i:129;i:22;i:130;i:22;i:135;i:23;i:136;i:23;i:137;i:23;i:138;i:23;i:139;i:23;i:140;i:23;i:141;i:23;i:142;i:23;i:143;i:23;i:144;i:23;i:149;i:24;i:150;i:25;i:151;i:26;i:152;i:27;i:153;i:28;i:154;i:29;i:155;i:30;i:156;i:31;i:157;i:32;i:158;i:33;i:159;i:34;i:160;i:35;i:161;i:36;i:162;i:37;i:163;i:38;}}