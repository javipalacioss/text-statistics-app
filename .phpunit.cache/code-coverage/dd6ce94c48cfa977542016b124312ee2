a:6:{s:9:"classesIn";a:1:{s:50:"SebastianBergmann\Comparator\NumericComparatorTest";a:6:{s:4:"name";s:21:"NumericComparatorTest";s:14:"namespacedName";s:50:"SebastianBergmann\Comparator\NumericComparatorTest";s:9:"namespace";s:28:"SebastianBergmann\Comparator";s:9:"startLine";i:19;s:7:"endLine";i:153;s:7:"methods";a:8:{s:23:"acceptsSucceedsProvider";a:6:{s:10:"methodName";s:23:"acceptsSucceedsProvider";s:9:"signature";s:32:"acceptsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:27;s:7:"endLine";i:48;s:3:"ccn";i:1;}s:20:"acceptsFailsProvider";a:6:{s:10:"methodName";s:20:"acceptsFailsProvider";s:9:"signature";s:29:"acceptsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:50;s:7:"endLine";i:59;s:3:"ccn";i:1;}s:28:"assertEqualsSucceedsProvider";a:6:{s:10:"methodName";s:28:"assertEqualsSucceedsProvider";s:9:"signature";s:37:"assertEqualsSucceedsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:61;s:7:"endLine";i:88;s:3:"ccn";i:1;}s:25:"assertEqualsFailsProvider";a:6:{s:10:"methodName";s:25:"assertEqualsFailsProvider";s:9:"signature";s:34:"assertEqualsFailsProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:90;s:7:"endLine";i:114;s:3:"ccn";i:1;}s:19:"testAcceptsSucceeds";a:6:{s:10:"methodName";s:19:"testAcceptsSucceeds";s:9:"signature";s:45:"testAcceptsSucceeds($expected, $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:116;s:7:"endLine";i:122;s:3:"ccn";i:1;}s:16:"testAcceptsFails";a:6:{s:10:"methodName";s:16:"testAcceptsFails";s:9:"signature";s:42:"testAcceptsFails($expected, $actual): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:124;s:7:"endLine";i:130;s:3:"ccn";i:1;}s:24:"testAssertEqualsSucceeds";a:6:{s:10:"methodName";s:24:"testAssertEqualsSucceeds";s:9:"signature";s:58:"testAssertEqualsSucceeds($expected, $actual, $delta): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:132;s:7:"endLine";i:143;s:3:"ccn";i:2;}s:21:"testAssertEqualsFails";a:6:{s:10:"methodName";s:21:"testAssertEqualsFails";s:9:"signature";s:55:"testAssertEqualsFails($expected, $actual, $delta): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:145;s:7:"endLine";i:152;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:154;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:146;}s:15:"ignoredLinesFor";a:9:{i:0;i:19;i:1;i:20;i:2;i:21;i:3;i:22;i:4;i:23;i:5;i:116;i:6;i:124;i:7;i:132;i:8;i:145;}s:17:"executableLinesIn";a:94:{i:19;i:1;i:20;i:2;i:21;i:3;i:22;i:4;i:29;i:6;i:30;i:6;i:31;i:6;i:32;i:6;i:33;i:6;i:34;i:6;i:35;i:6;i:36;i:6;i:37;i:6;i:38;i:6;i:39;i:6;i:40;i:6;i:41;i:6;i:42;i:6;i:43;i:6;i:44;i:6;i:45;i:6;i:46;i:6;i:47;i:6;i:52;i:7;i:53;i:7;i:54;i:7;i:55;i:7;i:56;i:7;i:57;i:7;i:58;i:7;i:63;i:8;i:64;i:8;i:65;i:8;i:66;i:8;i:67;i:8;i:68;i:8;i:69;i:8;i:70;i:8;i:71;i:8;i:72;i:8;i:73;i:8;i:74;i:8;i:75;i:8;i:76;i:8;i:77;i:8;i:78;i:8;i:79;i:8;i:80;i:8;i:81;i:8;i:82;i:8;i:83;i:8;i:84;i:8;i:85;i:8;i:86;i:8;i:87;i:8;i:92;i:9;i:93;i:9;i:94;i:9;i:95;i:9;i:96;i:9;i:97;i:9;i:98;i:9;i:99;i:9;i:100;i:9;i:101;i:9;i:102;i:9;i:103;i:9;i:104;i:9;i:105;i:9;i:106;i:9;i:107;i:9;i:108;i:9;i:109;i:9;i:110;i:9;i:111;i:9;i:112;i:9;i:113;i:9;i:116;i:10;i:119;i:11;i:120;i:11;i:121;i:11;i:124;i:12;i:127;i:13;i:128;i:13;i:129;i:13;i:132;i:14;i:135;i:15;i:138;i:16;i:139;i:17;i:142;i:18;i:145;i:19;i:148;i:20;i:149;i:21;i:151;i:22;}}