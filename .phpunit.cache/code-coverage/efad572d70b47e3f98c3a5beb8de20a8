a:6:{s:9:"classesIn";a:1:{s:43:"SebastianBergmann\Complexity\ComplexityTest";a:6:{s:4:"name";s:14:"ComplexityTest";s:14:"namespacedName";s:43:"SebastianBergmann\Complexity\ComplexityTest";s:9:"namespace";s:28:"SebastianBergmann\Complexity";s:9:"startLine";i:16;s:7:"endLine";i:51;s:7:"methods";a:6:{s:11:"testHasName";a:6:{s:10:"methodName";s:11:"testHasName";s:9:"signature";s:19:"testHasName(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:20;s:7:"endLine";i:23;s:3:"ccn";i:1;}s:27:"testHasCyclomaticComplexity";a:6:{s:10:"methodName";s:27:"testHasCyclomaticComplexity";s:9:"signature";s:35:"testHasCyclomaticComplexity(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:25;s:7:"endLine";i:28;s:3:"ccn";i:1;}s:17:"testCanBeFunction";a:6:{s:10:"methodName";s:17:"testCanBeFunction";s:9:"signature";s:25:"testCanBeFunction(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:30;s:7:"endLine";i:34;s:3:"ccn";i:1;}s:15:"testCanBeMethod";a:6:{s:10:"methodName";s:15:"testCanBeMethod";s:9:"signature";s:23:"testCanBeMethod(): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:36;s:7:"endLine";i:40;s:3:"ccn";i:1;}s:21:"complexityForFunction";a:6:{s:10:"methodName";s:21:"complexityForFunction";s:9:"signature";s:64:"complexityForFunction(): SebastianBergmann\Complexity\Complexity";s:10:"visibility";s:7:"private";s:9:"startLine";i:42;s:7:"endLine";i:45;s:3:"ccn";i:1;}s:19:"complexityForMethod";a:6:{s:10:"methodName";s:19:"complexityForMethod";s:9:"signature";s:62:"complexityForMethod(): SebastianBergmann\Complexity\Complexity";s:10:"visibility";s:7:"private";s:9:"startLine";i:47;s:7:"endLine";i:50;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:52;s:18:"commentLinesOfCode";i:8;s:21:"nonCommentLinesOfCode";i:44;}s:15:"ignoredLinesFor";a:3:{i:0;i:16;i:1;i:17;i:2;i:18;}s:17:"executableLinesIn";a:10:{i:16;i:1;i:17;i:2;i:22;i:3;i:27;i:4;i:32;i:5;i:33;i:6;i:38;i:7;i:39;i:8;i:44;i:9;i:49;i:10;}}