a:6:{s:9:"classesIn";a:1:{s:27:"PharIo\Version\CompliesTest";a:6:{s:4:"name";s:12:"CompliesTest";s:14:"namespacedName";s:27:"PharIo\Version\CompliesTest";s:9:"namespace";s:14:"PharIo\Version";s:9:"startLine";i:14;s:7:"endLine";i:65;s:7:"methods";a:4:{s:24:"testCompliesWhenExcepted";a:6:{s:10:"methodName";s:24:"testCompliesWhenExcepted";s:9:"signature";s:67:"testCompliesWhenExcepted(string $constraint, string $version): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:19;s:7:"endLine";i:23;s:3:"ccn";i:1;}s:27:"testNotCompliesWhenExcepted";a:6:{s:10:"methodName";s:27:"testNotCompliesWhenExcepted";s:9:"signature";s:70:"testNotCompliesWhenExcepted(string $constraint, string $version): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:28;s:7:"endLine";i:32;s:3:"ccn";i:1;}s:17:"complyingProvider";a:6:{s:10:"methodName";s:17:"complyingProvider";s:9:"signature";s:26:"complyingProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:34;s:7:"endLine";i:53;s:3:"ccn";i:1;}s:20:"notComplyingProvider";a:6:{s:10:"methodName";s:20:"notComplyingProvider";s:9:"signature";s:29:"notComplyingProvider(): array";s:10:"visibility";s:6:"public";s:9:"startLine";i:55;s:7:"endLine";i:64;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:66;s:18:"commentLinesOfCode";i:14;s:21:"nonCommentLinesOfCode";i:52;}s:15:"ignoredLinesFor";a:1:{i:0;i:14;}s:17:"executableLinesIn";a:28:{i:20;i:1;i:21;i:1;i:22;i:1;i:29;i:2;i:30;i:2;i:31;i:2;i:35;i:3;i:36;i:3;i:38;i:3;i:39;i:3;i:40;i:3;i:42;i:3;i:43;i:3;i:44;i:3;i:46;i:3;i:47;i:3;i:48;i:3;i:50;i:3;i:51;i:3;i:52;i:3;i:56;i:4;i:57;i:4;i:58;i:4;i:59;i:4;i:60;i:4;i:61;i:4;i:62;i:4;i:63;i:4;}}